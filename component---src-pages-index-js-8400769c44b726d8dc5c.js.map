{"version":3,"sources":["webpack:///./src/components/landing-bio.js","webpack:///./src/pages/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js","webpack:///./src/components/seo.js"],"names":["Container","Object","styled_base_browser_esm","target","name","styles","OuterContainer","Description","NameHeader","propTypes","siteTitle","PropTypes","string","defaultProps","LandingBio","core_browser_esm","gatsby_browser_entry","query","render","data","site","siteMetadata","title","_1846427949","IndexPage","layout","seo","keywords","landing_bio","StaticQueryContext","React","createContext","StaticQuery","props","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","Consumer","staticQueryData","children","object","isRequired","func","m","module","exports","require","default","ProdPageRenderer","_ref","location","pageResources","loader","getResourcesForPathnameSync","pathname","createElement","InternalPageRenderer","assign","json","shape","Content","NavLink","Link","GitHubLink","HomeLink","SiteHeader","Header","to","href","GatsbyLink","Footer","Layout","react_default","a","Fragment","header","layout_Content","Date","getFullYear","_755544856","node","SEO","description","lang","meta","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_1__","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_4___default","htmlAttributes","titleTemplate","content","property","author","concat","length","join","array","arrayOf"],"mappings":"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","file":"component---src-pages-index-js-8400769c44b726d8dc5c.js","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { StaticQuery, graphql } from \"gatsby\"\nimport styled from \"@emotion/styled\"\n\nconst Container = styled.div`\n  text-align: center;\n`\n\nconst OuterContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: row;\n  height: 78vh;\n`\n\nconst Description = styled.p`\n  padding: 0;\n  margin-bottom: 1rem;\n  font-size: 1.4rem;\n`\n\nconst NameHeader = styled.h1`\n  font-size: 3.5rem;\n  margin-bottom: 0;\n`\n\nconst LandingBio = () => (\n  <StaticQuery\n    query={graphql`\n      query LandingSiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <OuterContainer>\n        <Container>\n          <Description>Hello World!</Description>\n          <NameHeader>{data.site.siteMetadata.title}</NameHeader>\n          <br/>\n        <Description>Software Developer | All things JavaScript.</Description>\n        </Container>\n      </OuterContainer>\n    )}\n  />\n)\n\nNameHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nNameHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default LandingBio\n","import React from \"react\"\nimport {css} from \"@emotion/core\"\n\nimport LandingBio from \"../components/landing-bio\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nconst IndexPage = () => (\n  <Layout>\n    <SEO title=\"Home\" keywords={[`gatsby`, `application`, `react`]} />\n    <LandingBio />\n  </Layout>\n)\n\nexport default IndexPage\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import { Link } from \"gatsby\"\nimport styled from \"@emotion/styled\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\n\nconst Content = styled.div`\n  max-width: 860px;\n  padding: 1rem 1.0875rem;\n  font-size: 1.2rem;\n`\n\nconst NavLink = styled(Link)`\n  color: black;\n  margin-left: 15px;\n  text-decoration: none;\n  display: inline-block;\n  position: relative;\n\n  ::after {\n    content: \"\";\n    position: absolute;\n    width: 100%;\n    transform: scaleX(0);\n    height: 2px;\n    bottom: 0;\n    left: 0;\n    background-color: rgba(0, 0, 0, 0.8);\n    transform-origin: bottom right;\n    transition: transform 0.4s cubic-bezier(0.86, 0, 0.07, 1);\n  }\n\n  :hover::after {\n    transform: scaleX(1);\n    transform-origin: bottom left;\n  }\n`\n\nconst GitHubLink = styled.a`\n  color: black;\n  margin-left: 15px;\n  text-decoration: none;\n  display: inline-block;\n  position: relative;\n\n  ::after {\n    content: \"\";\n    position: absolute;\n    width: 100%;\n    transform: scaleX(0);\n    height: 2px;\n    bottom: 0;\n    left: 0;\n    background-color: rgba(0, 0, 0, 0.8);\n    transform-origin: bottom right;\n    transition: transform 0.4s cubic-bezier(0.86, 0, 0.07, 1);\n  }\n\n  :hover::after {\n    transform: scaleX(1);\n    transform-origin: bottom left;\n  }\n`\n\nconst HomeLink = styled(NavLink)`\n  margin-left: 0;\n`\n\nconst SiteHeader = styled.header`\n  background: transparent;\n  display: flex;\n  align-content: center;\n  justify-content: center;\n`\n\nconst Header = ({ siteTitle }) => (\n  <SiteHeader>\n    <Content>\n      <p>\n        <HomeLink to=\"/\">{'TheJSGirl'}</HomeLink>\n        <NavLink to=\"/blog\">Blog</NavLink>\n        <GitHubLink href=\"https://github.com/thejsgirl\">GitHub</GitHubLink>\n      </p>\n    </Content>\n  </SiteHeader>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { StaticQuery, graphql } from \"gatsby\"\nimport styled from \"@emotion/styled\"\n\nimport Header from \"./header\"\nimport \"./layout.css\"\n\nconst Content = styled.div`\n  margin: 0 auto;\n  max-width: 860px;\n  padding: 0 1.0875rem 1rem;\n  padding-top: 0;\n`\n\nconst GatsbyLink = styled.a`\n  margin-left: 5px;\n`\n\nconst Footer = styled.footer`\n  display: flex;\n  justify-content: center;\n`\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Header siteTitle={data.site.siteMetadata.title} />\n        <Content>\n          <main>{children}</main>\n          <Footer>\n            © {new Date().getFullYear()}, Built with\n            {` `}\n            <GatsbyLink href=\"https://www.gatsbyjs.org\">Gatsby</GatsbyLink>\n          </Footer>\n        </Content>\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n"],"sourceRoot":""}